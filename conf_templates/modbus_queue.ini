; Define a Modbus slave IED
[RTU_1]
IP=127.0.0.1
PORT=502
; delay after each interrogation (in milliseconds)
DELAY=1000

; Slave selector (can be commented if a gateway is not used)
;SLAVE_ID=1

; Response timeout in ms (default = 500ms)
;TIMEOUT=500

; read holding registers (FC=0x03): mb_address, number of registers, OSHMI_address of 1st
; Analog 16bit values are converted to float and divided by 32767.0 (1FFFh -> 1.0),
; so use kconv1=32767.0 in point_list.txt to restore the value as decimal from modbus
; or scale the values as needed using kconv1(multiplier) and kconv2(offset).
READHR_1=40001 5 1000
READHR_2=40010 10 2000
; read input registers (FC=0x04): mb_address, number of registers, OSHMI_address of 1st
; Analog 16bit values are converted to float and divided by 32767.0 (1FFFh -> 1.0),
; so use kconv1=32767.0 in point_list.txt to restore the value as decimal from modbus
; or scale the values as needed using kconv1(multiplier) and kconv2(offset).
READIR_1=30001 5 3000
READIR_2=30006 1 3006
; read each pair of consecutive holding registers (FC=0x03) as floats: mb_address, number of floats, OSHMI_address of 1st point
READHR_FLOAT_1=60001 5 11000
READHR_FLOAT_2=60010 10 12000
; read input status (FC=0x02): mb_address, number of bits, OSHMI_address of 1st
READIS_1=10001 32 5000
; read coils status (FC=0x01): mb_address, number of bits, OSHMI_address of 1st
READCS_1=1 32 8000
; Define a second Modbus slave IED

; read holding registers (FC=0x03) as bistring: mb_address, number of registers, OSHMI_address of 1st
; Each register (16bit) translates to 16 consecutive digital points of OSHMI
; If read more than one register it must be created blocks of 16 digital points in point_list.txt
; All digital points must be consecutive
READHR_BITSTR_1=0 1 9000

[RTU_2]
IP=127.0.0.1
PORT=503
; delay after each interrogation (in milliseconds)
DELAY=100

; Slave selector (can be commented if a gateway is not used)
SLAVE_ID=2

; Response timeout in ms (default = 500ms)
TIMEOUT=1000

; read holding registers (FC=0x03): mb_address, number of registers, OSHMI_address of 1st
READHR_1=40001 5 11000
READHR_2=40010 10 12000
; read input registers (FC=0x04): mb_address, number of registers, OSHMI_address of 1st
READIR_1=30001 5 13000
READIR_2=30006 1 13006
; read input status (FC=0x02): mb_address, number of input bits, OSHMI_address of 1st
READIS_1=10001 32 15000
; read coils status (FC=0x01): mb_address, number of input bits, OSHMI_address of 1st
READCS_1=1 32 18000

; when there are just 2 parameters per line, OSHMI address will be the same as mb_address
